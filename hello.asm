.include "constants.inc"
.include "header.inc"

.segment "ZEROPAGE"
pntr: .res 1
.segment "CODE"

.proc irq_handler
  RTI
.endproc


.proc nmi_handler

  LDA #$00
  STA OAMADDR
  LDA #$02
  STA OAMDMA
  ;LDA #$00
  ;STA $2005
  ;STA $2005
  RTI
.endproc


.proc reset_handler
  SEI
  CLD
  LDX #$00
  STX PPUCTRL  ;$2000
  STX PPUMASK
clrmem:
  LDA $0200,x
  LDA $0300,x
  LDA $0400,x
  LDA $0500,x
  LDA $0600,x
  LDA $0700,x
  INX
  CPX #$ff
  BNE clrmem
  TXS

vblankwait:
  BIT PPUSTATUS
  BPL vblankwait

vblankwait2:
  BIT PPUSTATUS
  BPL vblankwait2
  JMP main
.endproc


.proc main
  LDX PPUSTATUS ; $2002
  LDX #$3f
  STX PPUADDR
  LDX #$00
  STX PPUADDR
  LDX #$00
palLoop:
  LDA pal,x
  STA PPUDATA
  INX
  CPX #$10
  BNE palLoop

;do sprites
;   LDX #$00
; sprLoop:
;   LDA sprite, x
;   STA $0200, x
;   INX
;   CPX #$10
;   BNE sprLoop
;do background
;***********************************manual*******
;   LDA PPUSTATUS
;   LDA #$22
;   STA PPUADDR
;   LDA #$08
;   STA PPUADDR
;   LDA #$2e
;   STA PPUDATA
; 
;   LDA #$20
;   STA PPUADDR
;   LDA #$20
;   STA PPUADDR
;   LDA #$2d
;   STA PPUDATA
; 
;   LDA #$20
;   STA PPUADDR
;   LDA #$33
;   STA PPUADDR
;   LDA #$2f
;   STA PPUDATA
;   
;   LDA #$23
;   STA PPUADDR
;   LDA #$7d
;   STA PPUADDR
;   LDA #$08
;   STA PPUDATA

  LDA #<nam
  STA pntr
  LDA #>nam
  sta pntr+1
  LDY #$00
 LDA PPUSTATUS
  LDA #$20
  STA PPUADDR
  LDA #$00
  STA PPUADDR
  ;LDA #$2e
  ;STA PPUDATA
loop:
  LDA (pntr), y
  STA PPUDATA
  INY
  BNE loop
  INC pntr+1
  LDA pntr+1
  CMP #>nam+4
  BNE loop
loop2:                      ; Yes.  transfer final (partial) page
  lda  (pntr),y
  sta  PPUDATA
  iny
  cpy  #960-768           ; done?
  bne  loop2
;****************************************************

  LDX #$00
;loopbg:
 ; LDA nam, x
  ;STA PPUDATA
  ;INX
  ;CPX #$00
  ;BNE loopbg
;load attribute
;   LDA PPUSTATUS
;   LDA #$23
;   STA PPUADDR
;   LDA #$c0
;   STA PPUADDR
;   LDA #%11111111
;   STA PPUDATA
  LDA #$00
  ;;;LDX #$00
  STA $2005
  STA $2005

  LDA #%10010000
  STA PPUCTRL
  LDA #%00011110
  STA PPUMASK

forever:
  JMP forever
.endproc

.segment "RODATA"
pal:
  ;.byte $3f, $0b, $09, $0f, $3f, $2a, $2b, $18, $3f, $01, $02, $0f, $3f, $1a, $1b, $0f
.byte $0f,$00,$10,$30,$0f,$16,$29,$37,$0f,$06,$16,$26,$0f,$01,$11,$21



sprite:
  .byte $70, $05, $00, $80   ;y, sprite n in pattern table, attribute, x
  .byte $70, $06, $00, $88
  .byte $78, $07, $00, $80   ;y, sprite n in pattern table, attribute, x
  .byte $78, $08, $00, $88

nam:
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $f0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$f0
	.byte $f0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$f0
	.byte $f0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$f0
	.byte $f0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$f0,$f0,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$f0,$f0
	.byte $f0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$f0,$f0,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$f0,$f0
	.byte $f0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$f0,$f0
	.byte $f0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$f0,$f0
	.byte $f0,$00,$00,$00,$00,$00,$00,$00,$00,$30,$30,$30,$30,$30,$30,$30
	.byte $30,$30,$30,$30,$30,$30,$30,$00,$00,$00,$00,$00,$00,$00,$f0,$f0
	.byte $f0,$f0,$00,$00,$00,$00,$00,$00,$00,$30,$00,$f0,$f0,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$30,$00,$00,$00,$00,$00,$00,$00,$f0,$f0
	.byte $f0,$f0,$00,$00,$00,$00,$00,$00,$00,$30,$00,$34,$34,$34,$34,$34
	.byte $34,$34,$34,$34,$34,$00,$30,$00,$00,$00,$00,$00,$00,$00,$f0,$f0
	.byte $f0,$f0,$00,$00,$00,$00,$00,$00,$00,$30,$00,$34,$00,$00,$00,$34
	.byte $34,$00,$00,$00,$34,$00,$30,$00,$00,$00,$00,$00,$00,$00,$f0,$f0
	.byte $f0,$f0,$00,$00,$00,$00,$00,$00,$00,$30,$00,$34,$00,$00,$00,$34
	.byte $34,$00,$00,$00,$34,$00,$30,$00,$00,$00,$00,$00,$00,$00,$f0,$f0
	.byte $f0,$00,$00,$00,$00,$00,$00,$00,$00,$30,$00,$34,$00,$00,$00,$34
	.byte $34,$00,$00,$00,$34,$00,$30,$00,$00,$00,$00,$00,$00,$00,$f0,$f0
	.byte $f0,$f0,$00,$00,$00,$00,$00,$00,$00,$30,$00,$34,$34,$34,$34,$34
	.byte $34,$34,$34,$34,$34,$00,$30,$00,$00,$00,$00,$00,$00,$00,$f0,$f0
	.byte $f0,$f0,$00,$00,$00,$00,$00,$00,$00,$30,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$30,$00,$00,$00,$00,$00,$00,$00,$f0,$f0
	.byte $f0,$f0,$00,$00,$00,$00,$00,$00,$00,$30,$00,$0b,$08,$0b,$08,$0b
	.byte $08,$0b,$08,$0b,$08,$00,$30,$00,$00,$00,$00,$00,$00,$00,$f0,$f0
	.byte $f0,$f0,$00,$00,$00,$00,$00,$00,$00,$30,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$30,$00,$00,$00,$00,$00,$00,$00,$00,$f0
	.byte $f0,$f0,$00,$00,$00,$00,$00,$00,$00,$30,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$30,$00,$00,$00,$00,$00,$00,$00,$00,$f0
	.byte $f0,$f0,$00,$00,$00,$00,$00,$00,$00,$30,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$30,$00,$00,$00,$00,$00,$00,$00,$00,$f0
	.byte $f0,$00,$00,$00,$00,$00,$00,$00,$00,$30,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$30,$00,$00,$00,$00,$00,$00,$00,$00,$f0
	.byte $f0,$00,$00,$00,$00,$00,$00,$00,$00,$30,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$30,$00,$00,$00,$00,$00,$00,$00,$00,$f0
	.byte $f0,$00,$00,$00,$00,$00,$00,$00,$00,$30,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$30,$00,$00,$00,$00,$00,$00,$00,$00,$f0
	.byte $f0,$00,$00,$00,$00,$00,$00,$00,$00,$30,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$30,$00,$00,$00,$00,$00,$00,$00,$00,$f0
	.byte $f0,$00,$00,$00,$00,$00,$00,$00,$00,$30,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$30,$00,$00,$00,$00,$00,$00,$00,$00,$f0
	.byte $f0,$00,$00,$00,$00,$00,$00,$00,$00,$30,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$30,$00,$00,$00,$00,$00,$00,$00,$00,$f0
	.byte $f0,$00,$00,$00,$00,$00,$00,$00,$00,$30,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$30,$00,$00,$00,$00,$00,$00,$00,$00,$f0
	.byte $32,$32,$32,$32,$32,$32,$32,$32,$32,$32,$32,$32,$32,$32,$32,$32
	.byte $32,$32,$32,$32,$32,$32,$32,$32,$32,$32,$32,$32,$32,$32,$32,$32
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$40,$10,$00,$00,$00,$00
	.byte $00,$00,$a0,$a0,$a0,$a0,$00,$00,$00,$00,$aa,$8a,$2a,$aa,$00,$00
	.byte $00,$00,$aa,$aa,$aa,$aa,$00,$00,$00,$00,$22,$00,$00,$88,$00,$00
	.byte $00,$00,$22,$00,$80,$88,$00,$00,$0a,$0a,$0a,$0a,$0a,$0a,$0a,$0a

.segment "VECTORS"

.addr nmi_handler, reset_handler, irq_handler


.segment "CHARS"
.incbin "graphics.chr"
;.res 8192

.segment "STARTUP"